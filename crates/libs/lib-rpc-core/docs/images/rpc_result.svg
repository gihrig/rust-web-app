<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
     refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#AAA" />
    </marker>
  </defs>
  
  <rect width="800" height="600" fill="#2f2f2f"/>
  
  <!-- Title -->
  <text x="400" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="white">
    RPC Result Module Flow
  </text>
  
  <!-- Input Data Box -->
  <rect x="50" y="80" width="150" height="80" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="125" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">
    Input Data
  </text>
  <text x="125" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">
    T: Serialize
  </text>
  
  <!-- Arrow from Input to From Implementation -->
  <line x1="200" y1="120" x2="280" y2="120" stroke="#AAA" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- From Implementation Box -->
  <rect x="300" y="80" width="200" height="80" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="400" y="105" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">
    From&lt;T&gt; Implementation
  </text>
  <text x="400" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">
    fn from(val: T) -&gt; Self
  </text>
  <text x="400" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">
    { data: val }
  </text>
  
  <!-- Arrow from From Implementation to DataRpcResult -->
  <line x1="500" y1="120" x2="580" y2="120" stroke="#AAA" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- DataRpcResult Box -->
  <rect x="600" y="60" width="150" height="120" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="675" y="85" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">
    DataRpcResult&lt;T&gt;
  </text>
  <text x="675" y="105" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">
    struct {
  </text>
  <text x="675" y="125" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">
    data: T
  </text>
  <text x="675" y="145" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="white">
    }
  </text>
  <text x="675" y="165" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    #[derive(Serialize)]
  </text>
  
  <!-- JSON-RPC Response Flow -->
  <text x="400" y="220" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white">
    JSON-RPC Response Normalization
  </text>
  
  <!-- Raw Data -->
  <rect x="100" y="250" width="120" height="60" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="160" y="270" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    Raw Data
  </text>
  <text x="160" y="290" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    User{id: 1, name: "John"}
  </text>
  
  <!-- Arrow -->
  <line x1="220" y1="280" x2="280" y2="280" stroke="#AAA" stroke-width="2" marker-end="url(#arrowhead)"/>
  <text x="250" y="275" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">.into()</text>
  
  <!-- Wrapped Data -->
  <rect x="300" y="250" width="200" height="60" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="400" y="270" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    DataRpcResult&lt;User&gt;
  </text>
  <text x="400" y="290" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    { data: User{id: 1, name: "John"} }
  </text>
  
  <!-- Arrow -->
  <line x1="500" y1="280" x2="560" y2="280" stroke="#AAA" stroke-width="2" marker-end="url(#arrowhead)"/>
  <text x="530" y="275" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">serialize</text>
  
  <!-- JSON Output -->
  <rect x="580" y="240" width="180" height="80" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="670" y="260" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    JSON-RPC .result
  </text>
  <text x="670" y="280" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    {
  </text>
  <text x="670" y="295" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    "data": {
  </text>
  <text x="670" y="310" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    "id": 1, "name": "John" }
  </text>
  
  <!-- Key Features -->
  <text x="400" y="380" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white">
    Key Features
  </text>
  
  <!-- Feature boxes -->
  <rect x="80" y="400" width="160" height="100" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="160" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    Generic Design
  </text>
  <text x="160" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    Works with any type T
  </text>
  <text x="160" y="455" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    that implements
  </text>
  <text x="160" y="470" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    Serialize trait
  </text>
  <text x="160" y="485" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    (from serde)
  </text>
  
  <rect x="320" y="400" width="160" height="100" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="400" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    Easy Conversion
  </text>
  <text x="400" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    From&lt;T&gt; trait enables
  </text>
  <text x="400" y="455" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    automatic conversion
  </text>
  <text x="400" y="470" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    using .into() or
  </text>
  <text x="400" y="485" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    DataRpcResult::from()
  </text>
  
  <rect x="560" y="400" width="160" height="100" rx="5" fill="none" stroke="#AAA" stroke-width="2"/>
  <text x="640" y="420" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    JSON-RPC Standard
  </text>
  <text x="640" y="440" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    Normalizes response
  </text>
  <text x="640" y="455" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    format for consistent
  </text>
  <text x="640" y="470" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    JSON-RPC .result
  </text>
  <text x="640" y="485" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    property structure
  </text>
  
  <!-- Future Extensions Note -->
  <rect x="150" y="530" width="500" height="50" rx="5" fill="none" stroke="#AAA" stroke-width="1" stroke-dasharray="5,5"/>
  <text x="400" y="550" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-style="italic" fill="white">
    Future: May include metadata like pagination info for list responses
  </text>
  <text x="400" y="565" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="white">
    Note: Despite the name "Result", this is not a Rust Result&lt;T,E&gt; type
  </text>
</svg>