<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="500" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .bg { fill: #2f2f2f; }
      .arrow-fill { fill: #AAA; }
      .stroke-primary { stroke: #AAA; stroke-width: 2; fill: none; }
      .stroke-dashed { stroke: #AAA; stroke-width: 1.5; stroke-dasharray: 5,5; fill: none; }
      .line-primary { stroke: #AAA; stroke-width: 2; }
      .text-title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: white; text-anchor: middle; }
      .text-section { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; fill: white; text-anchor: middle; }
      .text-box-title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: white; text-anchor: middle; }
      .text-code { font-family: Arial, sans-serif; font-size: 12px; fill: white; text-anchor: middle; }
      .text-small { font-family: Arial, sans-serif; font-size: 10px; fill: white; text-anchor: middle; }
      .rect-layer { fill: #3D3D3D; }
      .rect-sublayer { fill: #4D4D4D; }
      .rect-process { fill: #5D5D5D; }
      .rect-error { fill: #6D3D3D; }
      .rect-data { fill: #3D5D3D; }
      .rect-extractor { fill: #3D3D5D; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" class="arrow-fill" />
    </marker>
  </defs>
  <rect width="800" height="500" class="bg" x="2" y="1" />

  <!-- Title -->
  <rect x="50" y="20" width="700" height="110" rx="5" class="stroke-primary rect-process" />
  <text x="400" y="50" class="text-title">quick_dev Module - API Testing Flow</text>

  <!-- Client Setup -->
  <text x="175" y="80" class="text-box-title">HTTP Client Setup</text>
  <text x="175" y="115" class="text-code">httpc_test::new_client("localhost:8080")</text>

  <!-- RPC API Layer -->
  <text x="400" y="80" class="text-box-title">JSON-RPC 2.0 API Layer</text>
  <text x="400" y="100" class="text-code">POST /api/rpc with method &amp; params</text>
  <text x="400" y="115" class="text-small">Protocol for agent, conversation &amp; message</text>

    <!-- HTTP Layer -->
  <text x="600" y="80" class="text-section">HTTP Transport Layer</text>
  <text x="600" y="100" class="text-code">httpc_test client - localhost:8080</text>
  <text x="600" y="115" class="text-small">Test HTTP client for API interaction</text>

  <!-- 1. Login Step -->
  <rect x="50" y="160" width="200" height="80" rx="5" class="stroke-primary rect-data" />
  <text x="150" y="185" class="text-box-title">1. Login</text>
  <text x="150" y="205" class="text-code">POST /api/login</text>
  <text x="150" y="225" class="text-small">username: "demo1", pwd: "welcome"</text>

  <!-- 2. Create Agent Step -->
  <rect x="300" y="160" width="200" height="80" rx="5" class="stroke-primary rect-data" />
  <text x="400" y="185" class="text-box-title">2. Create Agent</text>
  <text x="400" y="205" class="text-code">RPC: create_agent</text>
  <text x="400" y="225" class="text-small">name: "agent AAA"</text>

  <!-- Agent ID Storage -->
  <rect x="550" y="160" width="200" height="80" rx="5" class="stroke-primary rect-extractor" />
  <text x="650" y="185" class="text-box-title">Extract agent_id</text>
  <text x="650" y="205" class="text-code">result.json_value::</text>
  <text x="650" y="225" class="text-small">("/result/data/id")</text>

  <!-- 3. Get Agent Step -->
  <rect x="50" y="270" width="200" height="80" rx="5" class="stroke-primary rect-process" />
  <text x="150" y="295" class="text-box-title">3. Get Agent</text>
  <text x="150" y="315" class="text-code">RPC: get_agent</text>
  <text x="150" y="335" class="text-small">params: { id: agent_id }</text>

  <!-- 4. Create Conversation Step -->
  <rect x="300" y="270" width="200" height="80" rx="5" class="stroke-primary rect-data" />
  <text x="400" y="295" class="text-box-title">4. Create Conversation</text>
  <text x="400" y="315" class="text-code">RPC: create_conv</text>
  <text x="400" y="335" class="text-small">agent_id, title: "conv 01"</text>

  <!-- Conv ID Storage -->
  <rect x="550" y="270" width="200" height="80" rx="5" class="stroke-primary rect-extractor" />
  <text x="650" y="295" class="text-box-title">Extract conv_id</text>
  <text x="650" y="315" class="text-code">result.json_value::</text>
  <text x="650" y="335" class="text-small">("/result/data/id")</text>

  <!-- 5. Add Message Step -->
  <rect x="50" y="380" width="200" height="80" rx="5" class="stroke-primary rect-data" />
  <text x="150" y="405" class="text-box-title">5. Add Conv Message</text>
  <text x="150" y="425" class="text-code">RPC: add_conv_msg</text>
  <text x="150" y="445" class="text-small">conv_id, content: "first comment"</text>

  <!-- Message ID Storage -->
  <rect x="300" y="380" width="200" height="80" rx="5" class="stroke-primary rect-extractor" />
  <text x="400" y="405" class="text-box-title">Extract conv_msg_id</text>
  <text x="400" y="425" class="text-code">result.json_value::</text>
  <text x="400" y="445" class="text-small">("/result/data/id")</text>

  <!-- 6. Logoff Step -->
  <rect x="550" y="380" width="200" height="80" rx="5" class="stroke-primary rect-process" />
  <text x="650" y="405" class="text-box-title">6. Logoff</text>
  <text x="650" y="425" class="text-code">POST /api/logoff</text>
  <text x="650" y="445" class="text-small">logoff: true</text>

  <!-- Flow Arrows - Vertical Flow -->
  <line x1="150" y1="130" x2="150" y2="158" class="line-primary" marker-end="url(#arrowhead)" />
  <line x1="150" y1="240" x2="150" y2="268" class="line-primary" marker-end="url(#arrowhead)" />
  <line x1="150" y1="350" x2="150" y2="378" class="line-primary" marker-end="url(#arrowhead)" />

  <!-- Horizontal Flow for Create Agent -->
  <line x1="250" y1="200" x2="298" y2="200" class="line-primary" marker-end="url(#arrowhead)" />
  <line x1="500" y1="200" x2="548" y2="200" class="line-primary" marker-end="url(#arrowhead)" />

  <!-- Curved arrow from agent_id to Get Agent -->
  <path d="M 650 240 Q 600 250 550 250 Q 100 250 200 270" class="stroke-dashed" marker-end="url(#arrowhead)" />

  <!-- Horizontal Flow for Create Conv -->
  <line x1="250" y1="310" x2="298" y2="310" class="line-primary" marker-end="url(#arrowhead)" />
  <line x1="500" y1="310" x2="548" y2="310" class="line-primary" marker-end="url(#arrowhead)" />

  <!-- Curved arrow from conv_id to Add Message -->
  <path d="M 650 350 Q 600 360 550 360 Q 100 360 200 380" class="stroke-dashed" marker-end="url(#arrowhead)" />

  <!-- Horizontal Flow for Add Message -->
  <line x1="250" y1="420" x2="298" y2="420" class="line-primary" marker-end="url(#arrowhead)" />

  <!-- Final flow to Logoff -->
  <line x1="500" y1="420" x2="548" y2="420" class="line-primary" marker-end="url(#arrowhead)" />

</svg>
